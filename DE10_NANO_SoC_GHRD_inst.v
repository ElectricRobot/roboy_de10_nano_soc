// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.


// Generated by Quartus Prime Version 18.1 (Build Build 625 09/12/2018)
// Created on Sat Dec  8 16:06:16 2018

DE10_NANO_SoC_GHRD DE10_NANO_SoC_GHRD_inst
(
	.ADC_CONVST(ADC_CONVST_sig) ,	// output  ADC_CONVST_sig
	.ADC_SCK(ADC_SCK_sig) ,	// output  ADC_SCK_sig
	.ADC_SDI(ADC_SDI_sig) ,	// output  ADC_SDI_sig
	.ADC_SDO(ADC_SDO_sig) ,	// input  ADC_SDO_sig
	.ARDUINO_IO(ARDUINO_IO_sig) ,	// inout [15:0] ARDUINO_IO_sig
	.ARDUINO_RESET_N(ARDUINO_RESET_N_sig) ,	// inout  ARDUINO_RESET_N_sig
	.FPGA_CLK1_50(FPGA_CLK1_50_sig) ,	// input  FPGA_CLK1_50_sig
	.FPGA_CLK2_50(FPGA_CLK2_50_sig) ,	// input  FPGA_CLK2_50_sig
	.FPGA_CLK3_50(FPGA_CLK3_50_sig) ,	// input  FPGA_CLK3_50_sig
	.GPIO_0(GPIO_0_sig) ,	// inout [35:0] GPIO_0_sig
	.GPIO_1(GPIO_1_sig) ,	// inout [35:0] GPIO_1_sig
	.HDMI_I2C_SCL(HDMI_I2C_SCL_sig) ,	// inout  HDMI_I2C_SCL_sig
	.HDMI_I2C_SDA(HDMI_I2C_SDA_sig) ,	// inout  HDMI_I2C_SDA_sig
	.HDMI_I2S(HDMI_I2S_sig) ,	// inout  HDMI_I2S_sig
	.HDMI_LRCLK(HDMI_LRCLK_sig) ,	// inout  HDMI_LRCLK_sig
	.HDMI_MCLK(HDMI_MCLK_sig) ,	// inout  HDMI_MCLK_sig
	.HDMI_SCLK(HDMI_SCLK_sig) ,	// inout  HDMI_SCLK_sig
	.HDMI_TX_CLK(HDMI_TX_CLK_sig) ,	// output  HDMI_TX_CLK_sig
	.HDMI_TX_D(HDMI_TX_D_sig) ,	// output [23:0] HDMI_TX_D_sig
	.HDMI_TX_DE(HDMI_TX_DE_sig) ,	// output  HDMI_TX_DE_sig
	.HDMI_TX_HS(HDMI_TX_HS_sig) ,	// output  HDMI_TX_HS_sig
	.HDMI_TX_INT(HDMI_TX_INT_sig) ,	// input  HDMI_TX_INT_sig
	.HDMI_TX_VS(HDMI_TX_VS_sig) ,	// output  HDMI_TX_VS_sig
	.HPS_CONV_USB_N(HPS_CONV_USB_N_sig) ,	// inout  HPS_CONV_USB_N_sig
	.HPS_DDR3_ADDR(HPS_DDR3_ADDR_sig) ,	// output [14:0] HPS_DDR3_ADDR_sig
	.HPS_DDR3_BA(HPS_DDR3_BA_sig) ,	// output [2:0] HPS_DDR3_BA_sig
	.HPS_DDR3_CAS_N(HPS_DDR3_CAS_N_sig) ,	// output  HPS_DDR3_CAS_N_sig
	.HPS_DDR3_CKE(HPS_DDR3_CKE_sig) ,	// output  HPS_DDR3_CKE_sig
	.HPS_DDR3_CK_N(HPS_DDR3_CK_N_sig) ,	// output  HPS_DDR3_CK_N_sig
	.HPS_DDR3_CK_P(HPS_DDR3_CK_P_sig) ,	// output  HPS_DDR3_CK_P_sig
	.HPS_DDR3_CS_N(HPS_DDR3_CS_N_sig) ,	// output  HPS_DDR3_CS_N_sig
	.HPS_DDR3_DM(HPS_DDR3_DM_sig) ,	// output [3:0] HPS_DDR3_DM_sig
	.HPS_DDR3_DQ(HPS_DDR3_DQ_sig) ,	// inout [31:0] HPS_DDR3_DQ_sig
	.HPS_DDR3_DQS_N(HPS_DDR3_DQS_N_sig) ,	// inout [3:0] HPS_DDR3_DQS_N_sig
	.HPS_DDR3_DQS_P(HPS_DDR3_DQS_P_sig) ,	// inout [3:0] HPS_DDR3_DQS_P_sig
	.HPS_DDR3_ODT(HPS_DDR3_ODT_sig) ,	// output  HPS_DDR3_ODT_sig
	.HPS_DDR3_RAS_N(HPS_DDR3_RAS_N_sig) ,	// output  HPS_DDR3_RAS_N_sig
	.HPS_DDR3_RESET_N(HPS_DDR3_RESET_N_sig) ,	// output  HPS_DDR3_RESET_N_sig
	.HPS_DDR3_RZQ(HPS_DDR3_RZQ_sig) ,	// input  HPS_DDR3_RZQ_sig
	.HPS_DDR3_WE_N(HPS_DDR3_WE_N_sig) ,	// output  HPS_DDR3_WE_N_sig
	.HPS_ENET_GTX_CLK(HPS_ENET_GTX_CLK_sig) ,	// output  HPS_ENET_GTX_CLK_sig
	.HPS_ENET_INT_N(HPS_ENET_INT_N_sig) ,	// inout  HPS_ENET_INT_N_sig
	.HPS_ENET_MDC(HPS_ENET_MDC_sig) ,	// output  HPS_ENET_MDC_sig
	.HPS_ENET_MDIO(HPS_ENET_MDIO_sig) ,	// inout  HPS_ENET_MDIO_sig
	.HPS_ENET_RX_CLK(HPS_ENET_RX_CLK_sig) ,	// input  HPS_ENET_RX_CLK_sig
	.HPS_ENET_RX_DATA(HPS_ENET_RX_DATA_sig) ,	// input [3:0] HPS_ENET_RX_DATA_sig
	.HPS_ENET_RX_DV(HPS_ENET_RX_DV_sig) ,	// input  HPS_ENET_RX_DV_sig
	.HPS_ENET_TX_DATA(HPS_ENET_TX_DATA_sig) ,	// output [3:0] HPS_ENET_TX_DATA_sig
	.HPS_ENET_TX_EN(HPS_ENET_TX_EN_sig) ,	// output  HPS_ENET_TX_EN_sig
	.HPS_GSENSOR_INT(HPS_GSENSOR_INT_sig) ,	// inout  HPS_GSENSOR_INT_sig
	.HPS_I2C0_SCLK(HPS_I2C0_SCLK_sig) ,	// inout  HPS_I2C0_SCLK_sig
	.HPS_I2C0_SDAT(HPS_I2C0_SDAT_sig) ,	// inout  HPS_I2C0_SDAT_sig
	.HPS_I2C1_SCLK(HPS_I2C1_SCLK_sig) ,	// inout  HPS_I2C1_SCLK_sig
	.HPS_I2C1_SDAT(HPS_I2C1_SDAT_sig) ,	// inout  HPS_I2C1_SDAT_sig
	.HPS_KEY(HPS_KEY_sig) ,	// inout  HPS_KEY_sig
	.HPS_LED(HPS_LED_sig) ,	// inout  HPS_LED_sig
	.HPS_LTC_GPIO(HPS_LTC_GPIO_sig) ,	// inout  HPS_LTC_GPIO_sig
	.HPS_SD_CLK(HPS_SD_CLK_sig) ,	// output  HPS_SD_CLK_sig
	.HPS_SD_CMD(HPS_SD_CMD_sig) ,	// inout  HPS_SD_CMD_sig
	.HPS_SD_DATA(HPS_SD_DATA_sig) ,	// inout [3:0] HPS_SD_DATA_sig
	.HPS_SPIM_CLK(HPS_SPIM_CLK_sig) ,	// output  HPS_SPIM_CLK_sig
	.HPS_SPIM_MISO(HPS_SPIM_MISO_sig) ,	// input  HPS_SPIM_MISO_sig
	.HPS_SPIM_MOSI(HPS_SPIM_MOSI_sig) ,	// output  HPS_SPIM_MOSI_sig
	.HPS_SPIM_SS(HPS_SPIM_SS_sig) ,	// inout  HPS_SPIM_SS_sig
	.HPS_UART_RX(HPS_UART_RX_sig) ,	// input  HPS_UART_RX_sig
	.HPS_UART_TX(HPS_UART_TX_sig) ,	// output  HPS_UART_TX_sig
	.HPS_USB_CLKOUT(HPS_USB_CLKOUT_sig) ,	// input  HPS_USB_CLKOUT_sig
	.HPS_USB_DATA(HPS_USB_DATA_sig) ,	// inout [7:0] HPS_USB_DATA_sig
	.HPS_USB_DIR(HPS_USB_DIR_sig) ,	// input  HPS_USB_DIR_sig
	.HPS_USB_NXT(HPS_USB_NXT_sig) ,	// input  HPS_USB_NXT_sig
	.HPS_USB_STP(HPS_USB_STP_sig) ,	// output  HPS_USB_STP_sig
	.KEY(KEY_sig) ,	// input [1:0] KEY_sig
	.LED(LED_sig) ,	// output [7:0] LED_sig
	.SW(SW_sig) 	// input [3:0] SW_sig
);

